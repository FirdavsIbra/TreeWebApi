// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using iTechArt.DBCodeFirst.DbContexts;

#nullable disable

namespace iTechArt.DBCodeFirst.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230123075231_plot")]
    partial class plot
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("iTechArt.DBCodeFirst.Entities.PlotDb", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<double>("Capacity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Plots");
                });

            modelBuilder.Entity("iTechArt.DBCodeFirst.Entities.TreeDb", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<double>("BeginingOfTheHarvestInY")
                        .HasColumnType("float");

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.Property<double>("HeightInMetre")
                        .HasColumnType("float");

                    b.Property<long>("PlotId")
                        .HasColumnType("bigint");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<double>("Square")
                        .HasColumnType("float");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlotId");

                    b.ToTable("Trees");
                });

            modelBuilder.Entity("iTechArt.DBCodeFirst.Entities.TreeDb", b =>
                {
                    b.HasOne("iTechArt.DBCodeFirst.Entities.PlotDb", "Plot")
                        .WithMany("Trees")
                        .HasForeignKey("PlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plot");
                });

            modelBuilder.Entity("iTechArt.DBCodeFirst.Entities.PlotDb", b =>
                {
                    b.Navigation("Trees");
                });
#pragma warning restore 612, 618
        }
    }
}
